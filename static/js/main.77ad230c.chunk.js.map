{"version":3,"sources":["services/apiUsers.js","redux/usersReducer.js","components/employees/Employee.js","components/employees/Employees.js","components/birthdays/Birthday.js","components/birthdays/Birthdays.js","App.js","redux/store.js","index.js"],"names":["apiUsers","axios","get","SET_USERS","SET_USERS_ACTIVE","initialState","users","lastName","isActive","dob","getUsers","dispatch","then","response","data","map","user","localStorage","getItem","JSON","parse","type","payload","catch","error","console","log","usersReducer","state","action","stateCopy","find","id","value","connect","setItem","stringify","setActiveAction","props","firstName","toggleStatus","className","onChange","checked","useEffect","sortedUsers","sort","a","b","localeCompare","alphabet","letter","names","filter","indexOf","filterValues","length","name","filteredLastNames","Birthday","months","date","Date","day","getDate","month","getMonth","year","getFullYear","getFormattedData","check","some","dates","i","n","setMonth","push","toLocaleString","usersBirthdays","filteredUsers","item","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77ad230c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiUrl = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n\r\nexport const apiUsers = {\r\n  users() {\r\n    return axios.get(apiUrl);\r\n  }\r\n};","import { apiUsers } from '../services/apiUsers';\n\nconst SET_USERS = \"SET_USERS\";\nconst SET_USERS_ACTIVE = \"SET_USERS_ACTIVE\";\n\nlet initialState = {\n  users: [{\n    lastName: ' ',\n    isActive: false,\n    dob: ' ',\n  }],\n}\n\nconst usersReducer = (state = initialState, action) => {\n  let stateCopy = {...state};\n\n  switch (action.type) {\n    case SET_USERS:\n      stateCopy.users = action.payload;\n      return stateCopy;\n    case SET_USERS_ACTIVE:\n      stateCopy.users.find((user) => (user.id === action.payload.id))['isActive'] = action.payload.value;\n      return stateCopy;\n    default:\n      return state;\n  }\n}\n\nexport const setUserAction = (users) => ({\n  type: SET_USERS,\n  payload: users\n});\n\nexport const setActiveAction = (value, id) => ({\n  type: SET_USERS_ACTIVE,\n  payload: {value, id}\n});\n\nexport const getUsers = () => (dispatch) => {\n  apiUsers.users()\n    .then(response => {\n      let data = response.data;\n\n      data.map(user => {\n        if (localStorage.getItem(user['id']) === null) {\n          return (user['isActive'] = false);\n        } else {\n          return (user['isActive'] = JSON.parse(localStorage.getItem(user['id'])));\n        }\n      })\n      \n      dispatch(setUserAction(data));\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport const isActive = (value, id) => (dispatch) => {\n  localStorage.setItem(id, JSON.stringify(value));\n  dispatch(setActiveAction(value, id));\n}\n\nexport default usersReducer;","import { connect } from \"react-redux\";\nimport { getUsers, isActive } from \"../../redux/usersReducer\";\n\nconst Employee = (props) => {\n  const { isActive, lastName, firstName, id, value, getUsers } = props;\n  \n  const toggleStatus = (value, id) => {\n    isActive(value, id);\n    getUsers();\n  }\n\n  const renderClassNames = () => {\n    return \"employee-container\" + (value ? \" active\" : \"\");\n  }\n\n  return (\n    <div className={renderClassNames()} id={id}>\n      <h3>{lastName} {firstName}</h3>\n      <div>\n        <input\n          type=\"radio\"\n          onChange={() => {toggleStatus(false, id)}}\n          checked={value === false}\n        />\n        <span>not active</span>\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          onChange={() => {toggleStatus(true, id)}}\n          checked={value === true}\n        />\n        <span>active</span>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(null, {isActive, getUsers})(Employee);","import './employees.scss';\nimport { useEffect } from \"react\";\nimport { connect} from \"react-redux\";\nimport { getUsers } from \"../../redux/usersReducer\";\nimport Employee from \"./Employee\";\n\nconst Employees = (props) => {\n  const {getUsers, users} = props;\n  \n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  const sortedUsers = users.sort((a, b) => a.lastName.localeCompare(b.lastName));\n\n  let arr_EN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  const filterValues = (letter) => {\n    return sortedUsers.filter(data => {\n      return data.lastName[0].indexOf(letter) > -1;\n    });\n  }\n\n  const alphabet = arr_EN.map(letter => {\n    let names = filterValues(letter);\n    \n    let filteredLastNames = (names) => {\n      if (names.length === 0) {\n        return (\n          <h1 className=\"empty\">-----</h1>\n        );\n      } else {\n        return (names.map(name => {\n          return (\n            <div key={name.id}>\n              <Employee\n                id={name.id}\n                firstName={name.firstName}\n                lastName={name.lastName}\n                value={name.isActive}\n              />\n            </div>\n          );\n        }));\n      }\n    }\n  \n    return (\n      <div className=\"alphabet-column\" key={letter}>\n        <h1>{letter}</h1>\n        {filteredLastNames(names)}\n      </div>\n    );\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">\n        <h2>Employees</h2>\n      </div>\n      <div className=\"content-section\">\n        {alphabet}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users.users\n  };\n}\n\nexport default connect(mapStateToProps, {getUsers})(Employees);","const Birthday = (props) => {\n  const { lastName, firstName, dob } = props;\n  \n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December ',\n  ];\n\n  const getFormattedData = (dob) => {\n    const date = new Date(dob);\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    return `${day} ${month}, ${year} year`;\n  };\n  \n  return (\n    <div className=\"birthday\">\n      <li>{lastName} {firstName} - {getFormattedData(dob)}</li>\n    </div>\n  );\n}\n\nexport default Birthday;","import \"./birthdays.scss\";\nimport {connect} from \"react-redux\";\nimport Birthday from \"./Birthday\";\n\nconst Birthdays = (props) => {\n  const { users } = props;\n  let check;\n\n  (() => {\n    users.some((user) => {\n      check = (user.isActive === true);\n      return check;\n    })\n  })();\n\n  let date = new Date();\n  let dates = [];\n\n  for (let i = 0; i < 12; i++) {\n    let n;\n  \n    i ? n = 1 : n = 0;\n    date.setMonth(date.getMonth() + n, 1);\n    dates.push(date.toLocaleString('en-us', {month: 'long'}));\n  }\n\n  const filteredMonths = (month) => {\n    return users.filter(user => {\n      if (user.isActive) {\n        let userDob = new Date(user.dob);\n        let userMonth = userDob.toLocaleString('en-us', {month: 'long'});\n        \n        return userMonth.indexOf(month) > -1;\n      }\n      \n      return null;\n    })\n  }\n\n  const usersBirthdays = dates.map(date => {\n    let user = filteredMonths(date);\n    let filteredUsers = user.map(item => {\n      return (\n        <div key={item.id}>\n          <Birthday lastName={item.lastName} firstName={item.firstName} dob={item.dob}/>\n        </div>\n      );\n    })\n        \n    if (filteredUsers.length) {\n      return (\n        <div className=\"months-row\" key={date}>\n          <h2>{date}</h2>\n          {filteredUsers}\n        </div>\n      );\n    }\n    \n    return null;\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">\n        {/* <h2>Birthdays</h2> */}\n        <h2>Employees birthday</h2>\n      </div>\n      <div className=\"content-section birthday-container\">\n        {!check &&\n          <div className=\"empty-list\">\n            <h1>Employees List is empty</h1>\n          </div>\n        }\n        <div className=\"months-list\">\n          {usersBirthdays}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users.users,\n  }\n}\n\nexport default connect(mapStateToProps, null)(Birthdays);","import './App.scss';\r\nimport Employees from './components/employees/Employees';\r\nimport Birthdays from './components/birthdays/Birthdays';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Employees />\r\n      <Birthdays />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport usersReducer from './usersReducer';\r\n\r\nlet reducers = combineReducers({users: usersReducer});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}